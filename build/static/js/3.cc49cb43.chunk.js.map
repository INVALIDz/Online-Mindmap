{"version":3,"sources":["methods/mindmapExporter.js","components/Popup/subComponents/Export.js"],"names":["copyNodeData","format","target_node","source_node","data","id","created","Date","now","text","expandState","showChildren","children","map","child","mindmapExporter","mindmap","export_data","lines","dfs","node","layer","push","repeat","exportNodeToText","forEach","join","exportMindmapToText","km_mindmap","root","JSON","stringify","exportMindmapToJSON","Export","_ref","handleClosePopup","_useContext","useContext","context","state","title","global","clearNodeStatus","useMindmap","handleExportText","url","concat","encodeURIComponent","downloadFile","toLowerCase","react_default","a","createElement","styledComponents","className","list_wrapper","onClick","html2canvas","document","getElementById","refer","then","canvas","toDataURL","css","_templateObject"],"mappings":"iLA6BMA,EAAe,SAAfA,EAAgBC,EAAQC,EAAaC,GACvC,OAAQF,GACJ,IAAK,KAOD,OANAC,EAAYE,KAAO,GACnBF,EAAYE,KAAKC,GAAKF,EAAYE,GAClCH,EAAYE,KAAKE,QAAUC,KAAKC,MAChCN,EAAYE,KAAKK,KAAON,EAAYM,KACpCP,EAAYE,KAAKM,YAAcP,EAAYQ,aAAe,SAAW,WACrET,EAAYU,SAAWT,EAAYS,SAASC,IAAI,SAAAC,GAAK,OAAId,EAAaC,EAAQ,GAAIa,KAC3EZ,EACX,QACI,SAcGa,EAAA,SAACC,EAASf,GACrB,IAAIgB,EACJ,OAAQhB,GACJ,IAAK,KACL,IAAK,MACDgB,EA7CgB,SAACD,EAASf,GAClC,IAAIiB,EAAQ,GAWZ,OAVY,SAANC,EAAOC,EAAMC,EAAOpB,GACjBmB,IAGLF,EAAMI,KApBW,SAACF,EAAMC,EAAOpB,GACnC,OAAQA,GACJ,IAAK,KACD,OAAIoB,EAAQ,EACD,IAAIE,OAAOF,EAAQ,GAAK,IAAMD,EAAKX,KAEvC,KAAKc,OAAOF,EAAQ,GAAK,KAAOD,EAAKX,KAChD,IAAK,MACD,MAAO,KAAKc,OAAOF,GAASD,EAAKX,KACrC,QACI,QAUOe,CAAiBJ,EAAMC,EAAOpB,IACzCmB,EAAKR,SAASa,QAAQ,SAAAX,GAClBK,EAAIL,EAAOO,EAAQ,EAAGpB,MAG9BkB,CAAIH,EAAS,EAAGf,GACTiB,EAAMQ,KAAK,MAiCIC,CAAoBX,EAASf,GAC3C,MACJ,QACIgB,EAlBgB,SAACD,EAASf,GAClC,OAAQA,GACJ,IAAK,KACD,IAAM2B,EAAa,CAACC,KAAM7B,EAAaC,EAAQ,GAAIe,IACnD,OAAOc,KAAKC,UAAUH,GAC1B,QACI,QAYcI,CAAoBhB,EAASf,GAGnD,OAAOgB,yZCvBIgB,UAhCA,SAAAC,GAAwB,IAAtBC,EAAsBD,EAAtBC,iBAAsBC,EAC2BC,qBAAWC,KAAjDtB,EADWoB,EAC5BpB,QAAUuB,MAAkCC,EADhBJ,EACDK,OAASF,MAAQC,MAC5CE,EAAmBC,cAAnBD,gBAUDE,EAAmB,SAAA3C,GACrB,IAAMG,EAAOW,EAAgBC,EAASf,GAClC4C,EAAG,mBAAAC,OAAsBC,mBAAmB3C,IAChD4C,YAAaH,EAAD,GAAAC,OAASN,EAAT,KAAAM,OAAkB7C,EAAOgD,iBAGzC,OAAQC,EAAAC,EAAAC,cAAA,WACJF,EAAAC,EAAAC,cAACC,EAAA,EAAD,yDACAH,EAAAC,EAAAC,cAAA,MAAIE,UAAWC,GACXL,EAAAC,EAAAC,cAAA,MAAII,QAjBY,WACpBd,IACAe,IAAYC,SAASC,eAAeC,MAAmBC,KAAK,SAAAC,GACxD,IAAIjB,EAAMiB,EAAOC,UAAU,aAC3Bf,YAAaH,EAAD,GAAAC,OAASN,EAAT,aAakBU,EAAAC,EAAAC,cAAA,KAAGE,UAAW,sBAA5C,oCACAJ,EAAAC,EAAAC,cAAA,MAAII,QAAS,WAAQZ,EAAiB,QAAUM,EAAAC,EAAAC,cAAA,KAAGE,UAAW,oBAA9D,2CACAJ,EAAAC,EAAAC,cAAA,MAAII,QAAS,WAAQZ,EAAiB,QAAUM,EAAAC,EAAAC,cAAA,KAAGE,UAAW,sBAA9D,2BACAJ,EAAAC,EAAAC,cAAA,MAAII,QAAS,WAAQZ,EAAiB,SAAWM,EAAAC,EAAAC,cAAA,KAAGE,UAAW,qBAA/D,6CAEJJ,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAAA,UAAQI,QAASrB,GAAjB,mBA3BZ,IAmCMoB,EAAeS,YAAHC,IAiBWL","file":"static/js/3.cc49cb43.chunk.js","sourcesContent":["const exportNodeToText = (node, layer, format) => {\n    switch (format) {\n        case 'MD':\n            if (layer < 6) {\n                return '#'.repeat(layer + 1) + ' ' + node.text;\n            }\n            return '\\t'.repeat(layer - 6) + '- ' + node.text;\n        case 'TXT':\n            return '\\t'.repeat(layer) + node.text;\n        default:\n            return;\n    }\n};\n\nconst exportMindmapToText = (mindmap, format) => {\n    let lines = [];\n    const dfs = (node, layer, format) => {\n        if (!node) {\n            return;\n        }\n        lines.push(exportNodeToText(node, layer, format));\n        node.children.forEach(child => {\n            dfs(child, layer + 1, format)\n        });\n    };\n    dfs(mindmap, 0, format);\n    return lines.join('\\n');\n};\n\nconst copyNodeData = (format, target_node, source_node) => {\n    switch (format) {\n        case 'KM':\n            target_node.data = {};\n            target_node.data.id = source_node.id;\n            target_node.data.created = Date.now();\n            target_node.data.text = source_node.text;\n            target_node.data.expandState = source_node.showChildren ? 'expand' : 'collapse';\n            target_node.children = source_node.children.map(child => copyNodeData(format, {}, child));\n            return target_node;\n        default:\n            return;\n    }\n};\n\nconst exportMindmapToJSON = (mindmap, format) => {\n    switch (format) {\n        case 'KM':\n            const km_mindmap = {root: copyNodeData(format, {}, mindmap)};\n            return JSON.stringify(km_mindmap);\n        default:\n            return;\n    }\n};\n\nexport default (mindmap, format) => {\n    let export_data;\n    switch (format) {\n        case 'MD':\n        case 'TXT':\n            export_data = exportMindmapToText(mindmap, format);\n            break;\n        default:\n            export_data = exportMindmapToJSON(mindmap, format);\n            break;\n    }\n    return export_data;\n}\n","import React, {useContext} from 'react';\nimport {css} from 'emotion';\nimport {context} from '../../../context';\nimport useMindmap from '../../../customHooks/useMindmap';\nimport * as refer from '../../../statics/refer';\nimport html2canvas from 'html2canvas';\nimport {downloadFile} from '../../../methods/assistFunctions';\nimport mindmapExporter from '../../../methods/mindmapExporter';\nimport {Highlight, ButtonSet} from '../common/styledComponents';\n\nconst Export = ({handleClosePopup}) => {\n    const {mindmap: {state: mindmap}, global: {state: {title}}} = useContext(context);\n    const {clearNodeStatus} = useMindmap();\n\n    const handleExportPNG = () => {\n        clearNodeStatus(); // 防止选中状态时的工具条等也被导出到图像\n        html2canvas(document.getElementById(refer.MINDMAP_ID)).then(canvas => {\n            let url = canvas.toDataURL('image/png');\n            downloadFile(url, `${title}.png`);\n        });\n    };\n\n    const handleExportText = format => {\n        const data = mindmapExporter(mindmap, format);\n        let url = `data:text/plain,${encodeURIComponent(data)}`;\n        downloadFile(url, `${title}.${format.toLowerCase()}`);\n    };\n\n    return (<div>\n        <Highlight>请选择导出格式：</Highlight>\n        <ul className={list_wrapper}>\n            <li onClick={handleExportPNG}><i className={'zwicon-file-image'} />PNG 图片（.png）</li>\n            <li onClick={() => { handleExportText('KM'); }}><i className={'zwicon-file-pdf'} />百度脑图（.km）</li>\n            <li onClick={() => { handleExportText('MD'); }}><i className={'zwicon-file-table'} />Markdown（.md）</li>\n            <li onClick={() => { handleExportText('TXT'); }}><i className={'zwicon-file-font'} />文本文件（.txt）</li>\n        </ul>\n        <ButtonSet>\n            <button onClick={handleClosePopup}>完成</button>\n        </ButtonSet>\n    </div>);\n};\n\nexport default Export;\n\n// CSS\nconst list_wrapper = css`\npadding: 0;\nlist-style: none;\n\nli {\npadding: 5px 0 5px 5px;\nborder-left: 3px solid transparent;\nborder-bottom: 1px solid #dddddd;\nline-height: 30px;\ncursor: pointer;\n}\n\nli:last-of-type {\nborder-bottom: none;\n}\n\nli:hover {\nborder-left: 3px solid var(${refer.THEME_EX});\n}\n\nli i {\nmargin-right: 10px;\nfont-size: 30px;\n}\n`;"],"sourceRoot":""}